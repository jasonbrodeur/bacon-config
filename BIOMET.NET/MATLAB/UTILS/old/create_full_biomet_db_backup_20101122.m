function create_full_biomet_db_backup(sites,Years,base_path)

% backs up: 
%        (1) the entire cleaned biomet db on Annex001 (stages 1-3).
%        (2) Site specific files e.g. SiteId_init_all.m
%        (3) all calibration files
% to a directory of the users choice. A logfile is generated, placed in base_dir
% and e-mailed to selected users (currently Zoran and Nick). 
% Detailed logs are generated by fr_automated_cleaning for each site 
% and year and placed in base_dir\database\yyyy\SiteId.

% Inputs:
%   -sites:      cell array of siteId's, if left empty default is
%                   {'CR' 'YF' 'OY' 'BS' 'PA' 'HJP02'}
%   -Years:      years desired; if left empty, program defaults to all existing
%                   years for each site for which there is data
%   -base_path:  desired location for backup

% File created: June 6, 2008 (Nick)         Last revision: Oct 6, 2010
% 
% Revisions:
% Oct 8, 2010
%   -added MPB3
% Oct 6, 2010
%   -MPB1 backup back to 2006 (was previously 2007).
% April 12, 2010
%      -added printing of lasterr in nep table catch statement

dv=datevec(now);
arg_default('sites',{'CR' 'YF' 'OY' 'BS' 'PA' 'JP' 'HJP02' 'HJP75' 'MPB1' 'MPB2' 'MPB3'});
if isempty(Years) % flag: user selects all years
    do_all_years = 1;
else
    do_all_years = 0;
end
today_str = datestr(now,'yyyy-mm-dd');
today_str = today_str([1:4 6:7 9:10]);
dir_name = today_str;

base_dir = fullfile(base_path,dir_name);
%==========================================================================
% Create base directory
% If it already exists stop because it might already be in use. If user
% wants to use this name it'll have to be deleted manually.

[s,mes] = mkdir(base_dir);
if ~isempty(mes)
   disp(sprintf('%s',mes));
   disp(sprintf('%s','... returning, backup directory already exists.'));
   return
else
    disp(sprintf('%s',['... backup directory ' base_dir ' created']));
end

fid = fopen(fullfile(base_dir,'biomet_db_backup.log'),'wt');
disp(sprintf('%s','%%%%%%%%%%%%%%%%%% Creating full biomet database backup %%%%%%%%%%%%%%%%%%'));
disp(sprintf('Date: %s',datestr(now)));
fprintf(fid,'%s\n','%%%%%%%%%%%%%%%%%% Creating full biomet database backup %%%%%%%%%%%%%%%%%%');
fprintf(fid,'Date: %s\n',datestr(now));

% ==========================================================================
% Copy biomet.net
disp('Copying biomet.net...');
fprintf(fid,'%s\n','Copying biomet.net...');
[s,mes] = mkdir(base_dir,'Biomet.net\Matlab');
[s,mes] = copyfile('\\paoa001\matlab',[base_dir '\Biomet.net\Matlab']);
if ~isempty(mes)
   disp(mes)
   disp('... returning, error copying Biomet.net');
   fprintf(fid,'%s\n',mes);
   fprintf(fid,'%s\n','... returning, error copying Biomet.net.')
   return
else
   disp(sprintf('%s - successfully copied Biomet.net',datestr(now)));
   fprintf(fid,'%s\n','... successfully copied Biomet.net');
end

for m=1:length(sites)

    SiteId = sites{m};
    
    %==========================================================================
    disp(sprintf('%s',['========== Full cleaned database backup for ' char(SiteId) ' ==========']));
    fprintf(fid,'%s\n',['========== Full cleaned database backup for ' char(SiteId) ' ==========']);
    %==========================================================================
    % Copy and create biomet setup matlab files
    disp(sprintf('%s','...Copying Site_specific'));
    fprintf(fid,'%s\n','...Copying Site_specific');
    All_Sites     = {'BS'   'CR' 'FEN' 'HJP02' 'HJP75' 'JP'   'OY' 'PA'   'YF' 'MPB1' 'MPB2'};
    All_Site_name = {'PAOB' 'CR' 'FEN' 'HJP02' 'HJP75' 'PAOJ' 'OY' 'PAOA' 'YF' 'MPB1' 'MPB2'};
    [dum,ind_id] = intersect(All_Sites,upper(SiteId));
    SiteName = char(All_Site_name(ind_id));
    if ~exist(fullfile(base_dir,'UBC_PC_SETUP\Site_specific',SiteId),'dir')
        [s,mes] = mkdir(base_dir,['UBC_PC_SETUP\Site_specific\' SiteId ]);
    end
    [s,mes] = copyfile(['\\paoa001\Sites\' SiteName '\UBC_PC_SETUP\Site_specific\*.m'],[base_dir '\UBC_PC_SETUP\Site_specific\' SiteId]);
    % PC_specific is not copied since we use the one on the current PC
    if ~isempty(mes)
        disp(mes)
        disp(['...error copying Site specific for ' SiteId]);
        fprintf(fid,'%s\n',mes);
        fprintf(fid,'%s\n',['...error copying Site specific for ' SiteId]);
    else
        disp(sprintf('%s ...Site specific done',datestr(now)));
        fprintf(fid,'%s ... Site specific done\n',datestr(now));
    end

    disp(sprintf('%s','Copying calibration files...'));
    fprintf(fid,'%s\n','Copying calibration files...');
    if ~exist(fullfile(base_dir,'calibration_files',SiteId),'dir')
        [s,mes] = mkdir([base_dir '\calibration_files\' SiteId]);
    end
    if strcmp(upper(SiteId),'OY')
        [s,mes] = copyfile(['\\paoa001\Sites\' SiteName '\hhour\manual_calibrations*'],[base_dir '\calibration_files\' SiteId]);
    else
        [s,mes] = copyfile(['\\paoa001\Sites\' SiteName '\hhour\calibrations*.*'],[base_dir '\calibration_files\' SiteId]);
    end
    if ~isempty(mes)
        disp(mes)
        disp(['...error copying calibration files for ' SiteId]);
        fprintf(fid,'%s\n',mes);
        fprintf(fid,'%s\n',['...error copying calibration files for ' SiteId]);
    else
        disp(sprintf('%s ...calibration files done',datestr(now)));
        fprintf(fid,'%s ...calibration files done\n',datestr(now));
    end

    %==========================================================================
    % Create first, second and thirdstage database (for comparison with current
    % results)

    % if user left Years empty, then assign years by site

    if do_all_years
        switch upper(SiteId)
            case 'CR'
                Years=1997:dv(1);
            case 'YF'
                Years=2001:dv(1);
            case 'OY'
                Years=2000:dv(1);
            case 'BS'
                Years=1999:dv(1);
            case 'PA'
                Years=1996:dv(1);
            case 'JP'
                Years=2000:dv(1);
            case 'HJP02'
                Years=2003:2008;
            case 'HJP75'
                Years=2004:dv(1);
            case 'MPB1'
                Years=2006:dv(1);
            case 'MPB2'
                Years=2007:dv(1);
            case 'MPB3'
                Years=2009:dv(1);
            otherwise
                Years=1997:dv(1);
        end
    end

    disp(sprintf('%s','Creating first thru thirdstage cleaned trace backups...'));
    fprintf(fid,'%s\n','Creating first thru thirdstage cleaned trace backups...');
    if ~exist(fullfile(base_dir,'database'),'dir')
        [s,mes] = mkdir(base_dir,'database');
    end
   % pth = pwd;
   % cd(base_dir); % This causes the cleaning log file to be created in base_dir
    for k=1:length(Years)
        try
            disp(sprintf('%s',['Creating cleaned trace backup for ' SiteId ' ' num2str(Years(k))]));
            fprintf(fid,'%s\n',['Creating cleaned trace backup for ' SiteId ' ' num2str(Years(k))]);
            fr_automated_cleaning(Years(k),SiteId,[1 2 3],[base_dir '\database']);
            disp(sprintf('%s ...Cleaned traces backup complete\n',datestr(now)));
            fprintf(fid,'%s ...Cleaned traces backup complete\n',datestr(now));
        catch
            disp(sprintf('%s ...Cleaned traces backup failed\n',datestr(now)));
            fprintf(fid,'%s ...Cleaned traces backup failed\n',datestr(now));
            continue
        end
    end
    
    % backup cleaning files: ini and .mat
    mkdir(base_dir,fullfile('database\Calculation_Procedures\TraceAnalysis_ini',SiteId));
    pth_ini = fullfile(base_dir,'database\Calculation_Procedures\TraceAnalysis_ini',SiteId);

    disp(['Copying TraceAnalysis_ini and FirstStage .mat files for ' SiteId] );
    fprintf(fid,'%s\n',['Copying TraceAnalysis_ini and FirstStage .mat files for ' SiteId ]);
    
    [s,mes] = copyfile(fullfile(biomet_path('Calculation_Procedures','TraceAnalysis_ini',SiteId),'*.ini'),pth_ini);
    if ~isempty(mes)
        disp(mes)
        disp(['...error copying ini files for ' SiteId]);
        fprintf(fid,'%s\n',mes);
        fprintf(fid,'%s\n',['...error copying ini files for ' SiteId]);
    else
        disp(sprintf('%s ...ini files done ',datestr(now)));
        fprintf(fid,'%s ...ini files done \n',datestr(now));
    end
    [s,mes] = copyfile(fullfile(biomet_path('Calculation_Procedures','TraceAnalysis_ini',SiteId),'*.mat'),pth_ini);
    if ~isempty(mes)
        disp(mes)
        disp(['...error copying FirstStage .mat files for ' SiteId]);
        fprintf(fid,'%s\n',mes);
        fprintf(fid,'%s\n',['...error copying FirstStage .mat files for ' SiteId]);
    else
        disp(sprintf('%s ...FirstStage .mat files done ',datestr(now)));
        fprintf(fid,'%s ...FirstStage .mat files done \n',datestr(now));
    end
   
   % cd(pth);
    disp(sprintf('%s',['========== Finished database backup for ' char(SiteId) ' ==========']));
    fprintf(fid,'%s\n',['========== Finished database backup for ' char(SiteId) ' ==============']);
   % base_dir = fullfile(base_path,dir_name); % reset base_dir for the next site
end
disp(sprintf('%s','%%%%%%%%%%%%%%%% Finished full biomet database backup %%%%%%%%%%%%%%%%%%%'));
fprintf(fid,'%s\n','%%%%%%%%%%%%%%%% Finished full biomet database backup %%%%%%%%%%%%%%%%%%%');

% compare annual cumulative NEP, GEP and R from newly generated db traces
% with Annex001 database
disp(sprintf('%s','%%%%%%%%%%%%%%%% Annual NEP comparison %%%%%%%%%%%%%%%%%%%'));
fprintf(fid,'%s\n','%%%%%%%%%%%%%%%% Annual NEP comparison %%%%%%%%%%%%%%%%%%%');
try
   pth_localdb = [base_dir '\database'];
%   pth_refdb   = 'D:\clean_db_backups\20100926\database';
   pth_refdb   = 'D:\clean_db_backups\20101024\database';
   create_biomet_annual_nep_report(dv(1),pth_localdb,pth_refdb,fid);
catch
   fprintf(fid,'%s\n','... creation of NEP comparison table failed ');
   fprintf(fid,'%s\n',lasterr);
end

disp(sprintf('%s','%%%%%%%%%%%%%%%% Annual NEP comparison finished %%%%%%%%%%%%%%%%%%%'));
fprintf(fid,'%s\n','%%%%%%%%%%%%%%%% Annual NEP comparison finished %%%%%%%%%%%%%%%%%%%');

fclose(fid);




% prepare and send an e-mail alert

message = [];   
message = [message sprintf('Biomet backup complete at %s:\n',datestr(now))];
message = [message sprintf('\n')];
message = [message sprintf('%s\n',['Backup can be found in ' base_dir ])];
message = [message sprintf('\n')];
message = [message sprintf('%s\n','***Please burn a DVD copy as soon as possible***')];

subject_line = 'Full biomet backup ready';

setpref('Internet',{'SMTP_Server','E_mail'},...
    {'smtp.interchange.ubc.ca','nick.grant@ubc.ca'});
message = char(message)';
[n,m] = size(message');
message = [message; ' '.*ones(75-m,n)];

sendmail('zoran.nesic@ubc.ca',subject_line,message(:)',fullfile(base_dir,'biomet_db_backup.log'));
sendmail('nick.grant@ubc.ca',subject_line,message(:)',fullfile(base_dir,'biomet_db_backup.log'));

% April 21, 2010: zip the entire backup, delete original files if zip is
% successful
zipwarn=0;
try
   fnzip = fullfile(base_path,[ today_str '.zip']);
   dosCmdStr = ['zip_clean_db  ' fnzip ' ' ...
              base_dir ' ' base_path];
   disp(dosCmdStr);
   dos(dosCmdStr);
catch
   zipwarn = 1;
   disp(sprintf('%s','... Zip archiving failed '));
   fprintf(fid,'%s\n','... Zip archiving failed ');
   disp(sprintf('%s',lasterr));
   fprintf(fid,'%s\n',lasterr);
end


return

