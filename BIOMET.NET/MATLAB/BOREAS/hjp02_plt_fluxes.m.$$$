function [] = hjp02_plt_fluxes(ind, year, select);


if nargin < 3
    select = 0;
end

%load in fluxes

pth = '\\PAOA001\SITES\hjp02\hhour\';

startDate   = datenum(min(year),1,0);     
currentDate = datenum(year,1,ind(1));
days        = ind(end)-ind(1)+1;
ext         = 's.hhjp02.mat';

StatsX = [];
data_pointer = 0;
for i = 1:days;
    
    filename_p = FR_DateToFileName(currentDate+.03);
    filename   = filename_p(1:6);
    
    if exist([pth filename ext]);
        load([pth filename ext]);
        for j = 1:length(Stats);
            data_pointer = data_pointer + 1;
            fNames = fieldnames(Stats);
            for kk = 1:length(fNames)
                StatsX = setfield(StatsX,{data_pointer},char(fNames(kk)),getfield(Stats,{j},char(fNames(kk))));
            end
        end
    end
    currentDate = currentDate + 1;
    
end

t = tmp_loop(StatsX,{'TimeVector'});

GMTshift = 6/24; 
t        = t - GMTshift; %PST time

%reset time vector to doy
fig = 0;
ind = find(t > startDate + ind(1) & t <= startDate + ind(end));
t = t(ind)-startDate;

st = datenum(year,1,min(ind));                         % first day of measurements
ed = datenum(year,1,max(ind));                         % last day of measurements (approx.)

%CSATn = 1;
%IRGAn = 2;
%Pn = 3;

%-----------------------------------------------
% NumOfSamples
%
fig = fig+1;figure(fig);clf;
Nsonic = tmp_loop(StatsX,{'Instrument(1).MiscVariables.NumOfSamples'});
Nirga_op = tmp_loop(StatsX,{'Instrument(2).MiscVariables.NumOfSamples'});
Nirga_cp = tmp_loop(StatsX,{'Instrument(5).MiscVariables.NumOfSamples'});

Nsonic(end-50:end) = Nsonic(end-50:end)+[1:51]'*10;
Nirga_cp(end-50:end) = Nirga_cp(end-50:end)-[1:51]'*10;
Nirga_op(end-50:end) = Nirga_op(end-50:end)-[1:51]'*20;

plot(t,[Nsonic(ind) Nirga_op(ind) Nirga_cp(ind)]);
grid on;
zoom on;
xlabel('DOY')
h = gca;
set(h,'YLim',[35900 36700])
title('Number of Samples');
ylabel('1')
legend('Sonic','LI7500','LI700')


%-----------------------------------------------
% Sonic wind speeds (before rotation)
%
fig = fig+1;figure(fig);clf;
U = tmp_loop(StatsX,{'Instrument(1).Avg(1)'});
V = tmp_loop(StatsX,{'Instrument(1).Avg(2)'});
W = tmp_loop(StatsX,{'Instrument(1).Avg(3)'});

plot(t,[U(ind) V(ind) W(ind)]);
grid on;
zoom on;
xlabel('DOY')
h = gca;
%set(h,'XLim',[st ed])
title('Sonic wind speed (before rotation)');
ylabel('(m/s)')
legend('U','V','W')

%-----------------------------------------------
% Sonic wind speeds (before rotation)
%
fig = fig+1;figure(fig);clf;
plot(t,(U(ind).^2 +V(ind).^2 + W(ind).^2).^0.5);
grid on;
zoom on;
xlabel('DOY')
h = gca;
%set(h,'XLim',[st ed])
title('Sonic cup wind speed (before rotation)');
ylabel('(m/s)')
%legend('U','V','W')

%-----------------------------------------------
% Sonic temperature
%
fig = fig+1;figure(fig);clf;
Tair = tmp_loop(StatsX,{'Instrument(1).Avg(4)'});
plot(t,Tair(ind));
grid on;
zoom on;
xlabel('DOY')
h = gca;
%set(h,'XLim',[st ed])
title('Sonic air temperature');
ylabel('\circC')

%-----------------------------------------------
% LI-7500 Temperature
%
fig = fig+1;figure(fig);clf;
Tbench = [tmp_loop(StatsX,{'Instrument(2).Avg(4)'}) ...
          tmp_loop(StatsX,{'Instrument(2).Min(4)'}) ...
          tmp_loop(StatsX,{'Instrument(2).Max(4)'}) ...
          ];
plot(t,Tbench(ind,:));
grid on;
zoom on;
xlabel('DOY')
h = gca;
%set(h,'XLim',[st ed])
title('LI-7500 Temperature');
ylabel('C')

%-----------------------------------------------
% LI-7000 Temperature
%
fig = fig+1;figure(fig);clf;
Tbench = [tmp_loop(StatsX,{'Instrument(5).Avg(3)'}) ...
          tmp_loop(StatsX,{'Instrument(5).Min(3)'}) ...
          tmp_loop(StatsX,{'Instrument(5).Max(3)'}) ...
          ];
plot(t,Tbench(ind,:));
grid on;
zoom on;
xlabel('DOY')
h = gca;
%set(h,'XLim',[st ed])
title('LI-7000 Temperature');
ylabel('C')


%-----------------------------------------------
% IRGA CO2 (mmol/m^3)
%
fig = fig+1;figure(fig);clf;
CO2 = tmp_loop(StatsX,{'Instrument(2).Avg(1)'});
plot(t,CO2(ind));
grid on;
zoom on;
xlabel('DOY')
h = gca;
%set(h,'XLim',[st ed])
title('IRGA CO2 (mmol/m^3)');
ylabel('mmol/m^3')

%-----------------------------------------------
% IRGA CO2 (umol/mol)
%
fig = fig+1;figure(fig);clf;
CO2_main = tmp_loop(StatsX,{'MainEddy.Three_Rotations.Avg(5)'});
CO2_main_max = tmp_loop(StatsX,{'MainEddy.Three_Rotations.Max(5)'});
CO2_main_min = tmp_loop(StatsX,{'MainEddy.Three_Rotations.Min(5)'});
CO2_sec = tmp_loop(StatsX,{'SecondEddy.Three_Rotations.Avg(5)'});
CO2_sec_max = tmp_loop(StatsX,{'SecondEddy.Three_Rotations.Max(5)'});
CO2_sec_min = tmp_loop(StatsX,{'SecondEddy.Three_Rotations.Min(5)'});
plot(t,[CO2_main(ind,:) CO2_main_max(ind,:) CO2_main_min(ind,:) ...
        CO2_sec(ind,:) CO2_sec_max(ind,:) CO2_sec_min(ind,:)]);
grid on;
zoom on;
xlabel('DOY')
legend('CO_2 CP Avg','CO_2 CP Max','CO_2 CP Min','CO_2 OP Avg','CO_2 OP Max','CO_2 OP Min')
h = gca;
set(h,'YLim',[330 500])
title('IRGA CO2 (umol/mol)');
ylabel('umol/mol')


%-----------------------------------------------
% IRGA H2O (mmol/m^3)
%
fig = fig+1;figure(fig);clf;
H2O = tmp_loop(StatsX,{'Instrument(2).Avg(2)'});
plot(t,H2O(ind));
grid on;
zoom on;
xlabel('DOY')
h = gca;
%set(h,'XLim',[st ed])
title('IRGA H2O (mmol/m^3)');
ylabel('mmol/m^3')

%-----------------------------------------------
% IRGA H2O (mmol/mol)
%
fig = fig+1;figure(fig);clf;
H2O_main = tmp_loop(StatsX,{'MainEddy.Three_Rotations.Avg(6)'});
H2O_main_max = tmp_loop(StatsX,{'MainEddy.Three_Rotations.Max(6)'});
H2O_main_min = tmp_loop(StatsX,{'MainEddy.Three_Rotations.Min(6)'});
H2O_sec = tmp_loop(StatsX,{'SecondEddy.Three_Rotations.Avg(6)'});
H2O_sec_max = tmp_loop(StatsX,{'SecondEddy.Three_Rotations.Max(6)'});
H2O_sec_min = tmp_loop(StatsX,{'SecondEddy.Three_Rotations.Min(6)'});
plot(t,[H2O_main(ind,:) H2O_main_max(ind,:) H2O_main_min(ind,:) ...
        H2O_sec(ind,:) H2O_sec_max(ind,:) H2O_sec_min(ind,:)]);
grid on;
zoom on;
xlabel('DOY')
h = gca;
set(h,'YLim',[0 15])
title('IRGA H2O (mmol/mol)');
ylabel('mmol/mol')
legend('H_2O CP Avg','H_2O CP Max','H_2O CP Min','H_2O OP Avg','H_2O OP Max','H_2O OP Min')



%-----------------------------------------------
% Energy fluxes
%
fig = fig+1;figure(fig);clf;
LE = tmp_loop(StatsX,{'MainEddy.Three_Rotations.AvgDtr.Fluxes.LE_L'});
H = tmp_loop(StatsX,{'MainEddy.Three_Rotations.AvgDtr.Fluxes.Hs'});
LE_op = tmp_loop(StatsX,{'SecondEddy.Three_Rotations.AvgDtr.Fluxes.LE_L'});
plot(t,[H(ind) LE(ind) LE_op(ind)]);
grid on;
zoom on;
xlabel('DOY')
h = gca;
%set(h,'XLim',[st ed])
title('Energy fluxes');
ylabel('W/m^2')
legend('H','LE_{cp}','LE_{op}')

%-----------------------------------------------
% CO2 flux
%
fig = fig+1;figure(fig);clf;
Fc = tmp_loop(StatsX,{'MainEddy.Three_Rotations.AvgDtr.Fluxes.Fc'});
try
    Fc_sec = tmp_loop(StatsX,{'SecondEddy.Three_Rotations.AvgDtr.Fluxes.Fc'});
catch
    Fc_sec =  NaN * ones(size(Fc));
end

plot(t,Fc(ind),t,Fc_sec(ind));
grid on;
zoom on;
xlabel('DOY')
h = gca;
%set(h,'XLim',[st ed])
title('Fc');
ylabel('?')
legend('Main EC','Second EC')


%------------------------------------------
if select == 1 %diagnostics only
    childn = get(0,'children');
    childn = sort(childn);
    N = length(childn);
    for i=childn(:)';
        if i < 200 
            figure(i);
            if i ~= childn(N-1)
                pause;
            end
        end
    end
    return
end

return

%-----------------------------------------------
% Air temperatures (Gill and 0.001" Tc)
%
fig = fig+1;figure(fig);clf;
plot(t,means(:,[4]));
h = gca;
set(h,'XLim',[st ed],'YLim',Tax)

grid on;zoom on;xlabel('DOY')
title('Air temperature CSAT')
ylabel('\circC')
%legend('sonic','HMP',-1)
zoom on;

%-----------------------------------------------
% Barometric pressure
%
fig = fig+1;figure(fig);clf;
plot(t,Pbar);
h = gca;
set(h,'XLim',[st ed],'YLim',[90 102])

grid on;zoom on;xlabel('DOY')
title('Barometric pressure')
ylabel('kPa')

%-----------------------------------------------
% H_2O (mmol/mol of dry air)
%
fig = fig+1;figure(fig);clf;

tmp = (0.61365*exp((17.502*HMPT)./(240.97+HMPT)));  %HMP vapour pressure
HMP_mixratio = (1000.*tmp.*HMPRH)./(Pbar-HMPRH.*tmp); %mixing ratio

plot(t,means(:,[6]),tv,HMP_mixratio);
grid on;zoom on;xlabel('DOY')
h = gca;
set(h,'XLim',[st ed], 'YLim',[-1 22])
title('H_2O ')
ylabel('(mmol mol^{-1} of dry air)')

legend('IRGA','HMP',-1)
zoom on;

%-----------------------------------------------
% H_2O (mmol/mol of dry air) vs. HMP
%
fig = fig+1;figure(fig);clf;

plot(means(IB,[6]),HMP_mixratio(IA),'.',...
    [-1 22],[-1 22]);
grid on;zoom on;ylabel('HMP mixing ratio (mmol/mol)')
h = gca;
set(h,'XLim',[-1 22], 'YLim',[-1 22])
title('H_2O ')
xlabel('irga (mmol mol^{-1} of dry air)')
zoom on;

%-----------------------------------------------
% CO_2 (\mumol mol^-1 of dry air)
%
fig = fig+1;figure(fig);clf;
plot(t,means(:,[5]));

grid on;zoom on;xlabel('DOY')
h = gca;
set(h,'XLim',[st ed], 'YLim',[300 500])
title('CO_2')
ylabel('\mumol mol^{-1} of dry air')


%-----------------------------------------------
% CO2 flux
%
fig = fig+1;figure(fig);clf;
plot(t,Fc);
h = gca;
set(h,'YLim',[-20 20],'XLim',[st ed]);

grid on;zoom on;xlabel('DOY')
title('F_c')
ylabel('\mumol m^{-2} s^{-1}')

%-----------------------------------------------
% Sensible heat
%
fig = fig+1;figure(fig);clf;
plot(t,H); 
h = gca;
set(h,'YLim',[-200 600],'XLim',[st ed]);

grid on;zoom on;xlabel('DOY')
title('Sensible heat')
ylabel('(Wm^{-2})')
legend('Gill','Tc1','Tc2',-1)

%-----------------------------------------------
% Latent heat
%
fig = fig+1;figure(fig);clf;
plot(t,Le); 
h = gca;
set(h,'YLim',[-10 400],'XLim',[st ed]);

grid on;zoom on;xlabel('DOY')
title('Latent heat')
ylabel('(Wm^{-2})')

%-----------------------------------------------
% Energy budget components
%
fig = fig+1;figure(fig);clf;
plot(tv,Rn,t,Le,t,H,tv,G); 
ylabel('W/m2');
legend('Rn','LE','H','G');

h = gca;
set(h,'YLim',EBax,'XLim',[st ed]);
grid on;zoom on;xlabel('DOY')

fig = fig+1;figure(fig);clf;
plot(tv,Rn-G,t,H+Le);
xlabel('DOY');
ylabel('W m^{-2}');
title('Energy budget');
legend('Rn-G','H+LE');

h = gca;
set(h,'YLim',EBax,'XLim',[st ed]);
grid on;zoom on;xlabel('DOY')

A = Rn-G;
T = H+Le;
[C,IA,IB] = intersect(datestr(tv),datestr(t),'rows');
A = A(IA);
T = T(IB);
cut = find(isnan(A) | isnan(T) | A > 700 | A < -200 | T >700 | T < -200 |...
   H(IB) == 0 | Le(IB) == 0 | Rn(IA) == 0 );
A = clean(A,1,cut);
T = clean(T,1,cut);
[p, R2, sigma, s, Y_hat] = polyfit1(A,T,1);

fig = fig+1;figure(fig);clf;
plot(Rn(IA)-G(IA),H(IB)+Le(IB),'.',...
   A,T,'o',...
   EBax,EBax,...
   EBax,polyval(p,EBax),'--');
text(-100, 400, sprintf('T = %2.3fA + %2.3f, R2 = %2.3f',p,R2));
xlabel('Ra (W/m2)');
ylabel('H+LE (W/m2)');
title('Energy budget');
h = gca;
set(h,'YLim',EBax,'XLim',EBax);
grid on;zoom on;



childn = get(0,'children');
childn = sort(childn);
N = length(childn);
for i=childn(:)';
    if i < 200 
        figure(i);
        if i ~= childn(N-1)                
            pause;    
        end
    end
end

function [x, tv] = tmp_loop(Stats,field)
%tmp_loop.m pulls out specific structure info and places it in a matric 'x' 
%with an associated time vector 'tv' if Stats.TimeVector field exists
%eg. [Fc_ubc, tv]  = tmp_loop(StatsX,'MainEddy.Three_Rotations.AvgDtr.Fluxes.Fc');


%E. Humphreys  May 26, 2003
%
%Revisions:
%July 28, 2003 - added documentation

L  = length(Stats);

for i = 1:L
   try,
    eval_char=['tmp = Stats(i).' char(field) ';'];
    eval(eval_char);
      if length(size(tmp)) > 2;
         [m,n] = size(squeeze(tmp)); 
         
         if m == 1; 
            x(i,:) = squeeze(tmp); 
         else 
            x(i,:) = squeeze(tmp)';
         end      
      else         
         [m,n] = size(tmp); 
         if m == 1; 
            x(i,:) = tmp; 
         else 
            x(i,:) = tmp';
         end      
      end
      
      catch, x(i,:) = NaN; end
      try,eval(['tv(i) = Stats(i).TimeVector;']); catch, tv(i) = NaN; end
   end