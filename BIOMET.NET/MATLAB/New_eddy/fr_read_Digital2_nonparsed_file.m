function [EngUnits,Header] = fr_read_Digital2_nonparsed_file(fileName)
%
% (c) Zoran Nesic              file created: Sept 27, 2006 
%                               
%  - reads in data from e.g. ascii files generated by GII software running
%  RMYoung sonics in unparsed data collection mode. In this case, the file
%  has a binary header of the normal 'Digital2' type but the data is
%  inserted as ascii text.  The header is read and then the data is read in
%
%
% Revisions:
%   Sept 27, 2006 (Nick)
%       - format string for reading in values is now generated generically according to
%          Header.NumOfChans

VB2MatlabDateOffset = 693960;
    fid = fopen(fileName,'rb');
    if fid < 3
        EngUnits = NaN;
        Header = NaN;
    else
        fseek(fid,0,1);
    %disp(['File length: ' num2str(ftell(fid))])
        fseek(fid,0,-1);
        Header.Version = setstr(fread(fid,[1,7],'char'));
        Header.Size = fread(fid,[1,1],'int16') * 1000;
        Header.NumOfChans = fread(fid,[1,1],'int16');
        Header.SampleFreq = fread(fid,[1,1],'float32');
        Header.hhourStartTime = fread(fid,[1,1],'float64')+VB2MatlabDateOffset;
        Header.hhourEndTime = fread(fid,[1,1],'float64')+VB2MatlabDateOffset;
        Header.instrumentDescription = setstr(fread(fid,[1,30],'char'));
        Header.Poly = NaN * ones(Header.NumOfChans,2);
        for i=1:Header.NumOfChans
            Header.Poly(i,1) = fread(fid,[1,1],'float32');
            Header.Poly(i,2) = fread(fid,[1,1],'float32');
        end
        fseek(fid,Header.Size,'bof');
        dummy = fgetl(fid);
        fstr = [];
        for i=1:Header.NumOfChans
            fstr = [fstr ' %f'];
        end
        fstr = [fstr '\n' ];
        EngUnits = fscanf(fid,fstr);
        EngUnits = EngUnits(1:Header.NumOfChans*floor(length(EngUnits)/Header.NumOfChans));
        EngUnits = reshape(EngUnits,Header.NumOfChans,length(EngUnits)/Header.NumOfChans)';
        fclose(fid);
    end
